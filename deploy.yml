trigger: 'none'

pool: 'Default'

variables:
  configuration: 'Release'
  dotnet_version: '9.x'

stages:
  - stage: Build
    jobs:
      - job: Build
        displayName: 'Build'
        steps:
          - task: UseDotNet@2
            displayName: 'Install .NET SDK'
            inputs:
              packageType: 'sdk'
              version: $(dotnet_version)
              installationPath: $(Agent.ToolsDirectory)/dotnet

          - task: DotNetCoreCLI@2
            displayName: 'Restore'
            inputs:
              command: 'restore'
              projects: '**/*.csproj'

          - task: DotNetCoreCLI@2
            displayName: 'Build'
            inputs:
              command: 'build'
              projects: '**/*.csproj'
              arguments: '--configuration $(configuration)'

  - stage: Publish
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: Publish
        displayName: 'Publish'
        steps:
          - template: decrypt-file.yml
            parameters:
              input_file: './website/website.server/appsettings.secrets.json.enc'
              output_file: './website/website.server/appsettings.secrets.json'
              key: $(ENCRYPTION_KEY)

          - task: DotNetCoreCLI@2
            displayName: 'Publish'
            inputs:
              command: 'publish'
              arguments: '--configuration $(configuration) --output $(Build.ArtifactStagingDirectory)/publish'
              projects: '**/website.server.csproj'
              publishWebProjects: true

          - task: PublishBuildArtifacts@1
            displayName: 'Artifact'
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)/publish'
              artifactName: 'drop'
              publishLocation: 'Container'

  - stage: Deploy
    dependsOn: Publish
    condition: succeeded()
    jobs:
      - job: Deploy
        displayName: 'Deploy'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download Published Artifacts'
            inputs:
              artifact: 'drop' 
              path: '$(Build.ArtifactStagingDirectory)/publish'

          - task: AzureWebApp@1
            displayName: 'Deploy'
            inputs:
              azureSubscription: 'AzureServiceConnection'
              appType: 'webAppLinux'
              appName: 'dev-hancock'
              package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
              deploymentMethod: 'auto'