@implements IDisposable

<section id="projects" class="text-white/85 pt-[calc(var(--nav-height)+3rem)] px-6 py-20 md:px-16">
    <div class="mx-auto flex max-w-6xl flex-col gap-12">
        <h2 class="text-4xl font-semibold">Projects</h2>

        <div class="@ColumnsClass">
            @foreach (var repo in _projects)
            {
                <a href="@repo.Link" target="_blank">
                    <div class="bg-black/15 relative mb-4 flex cursor-pointer break-inside-avoid flex-col gap-4 rounded-lg p-10 transition-[padding] hover:py-14">
                        <h3 class="break-words text-xl font-semibold">@repo.Name</h3>
                        <p class="text-white/65 mr-4">@repo.Description</p>

                        <div class="text-white/40 flex gap-3">
                            <div class="flex items-center gap-1.5">
                                <svg aria-hidden="true" viewBox="0 0 16 16" height="16" width="16">
                                    <path fill-rule="evenodd" fill="currentColor" d="M1.679 7.932c.412-.621 1.242-1.75 2.366-2.717C5.175 4.242 6.527 3.5 8 3.5c1.473 0 2.824.742 3.955 1.715 1.124.967 1.954 2.096 2.366 2.717a.119.119 0 010 .136c-.412.621-1.242 1.75-2.366 2.717C10.825 11.758 9.473 12.5 8 12.5c-1.473 0-2.824-.742-3.955-1.715C2.92 9.818 2.09 8.69 1.679 8.068a.119.119 0 010-.136zM8 2c-1.981 0-3.67.992-4.933 2.078C1.797 5.169.88 6.423.43 7.1a1.619 1.619 0 000 1.798c.45.678 1.367 1.932 2.637 3.024C4.329 13.008 6.019 14 8 14c1.981 0 3.67-.992 4.933-2.078 1.27-1.091 2.187-2.345 2.637-3.023a1.619 1.619 0 000-1.798c-.45-.678-1.367-1.932-2.637-3.023C11.671 2.992 9.981 2 8 2zm0 8a2 2 0 100-4 2 2 0 000 4z"></path>
                                </svg>
                                <span>@repo.Watchers</span>
                            </div>
                            <div class="flex items-center gap-1.5">
                                <svg aria-hidden="true" viewBox="0 0 16 16" height="16" width="16">
                                    <path fill-rule="evenodd" fill="currentColor" d="M5 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 2.122a2.25 2.25 0 10-1.5 0v.878A2.25 2.25 0 005.75 8.5h1.5v2.128a2.251 2.251 0 101.5 0V8.5h1.5a2.25 2.25 0 002.25-2.25v-.878a2.25 2.25 0 10-1.5 0v.878a.75.75 0 01-.75.75h-4.5A.75.75 0 015 6.25v-.878zm3.75 7.378a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm3-8.75a.75.75 0 100-1.5.75.75 0 000 1.5z"></path>
                                </svg>
                                <span>@repo.Forks</span>
                            </div>
                            <div class="flex items-center gap-1.5">
                                <svg aria-hidden="true" viewBox="0 0 16 16" height="16" width="16">
                                    <path fill-rule="evenodd" fill="currentColor" d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25zm0 2.445L6.615 5.5a.75.75 0 01-.564.41l-3.097.45 2.24 2.184a.75.75 0 01.216.664l-.528 3.084 2.769-1.456a.75.75 0 01.698 0l2.77 1.456-.53-3.084a.75.75 0 01.216-.664l2.24-2.183-3.096-.45a.75.75 0 01-.564-.41L8 2.694v.001z"></path>
                                </svg>
                                <span>@repo.Stars</span>
                            </div>
                        </div>

                        <div class="absolute inset-y-0 right-0 flex items-center">
                            <div class="bg-white/20 flex h-20 w-10 items-center justify-center rounded-l-full">
                                <i class="fa-solid fa-arrow-right pl-1.5 text-xl"></i>
                            </div>
                        </div>
                    </div>
                </a>
            }
        </div>
    </div>
</section>


@code {

    [Inject]
    HttpClient Client { get; set; } = default!;

    [Inject]
    IEventService Events { get; set; } = default!;

    List<ProjectDto> _projects = new();

    IDisposable? _token;

    protected override async Task OnInitializedAsync()
    {
        var projects = await Client.GetFromJsonAsync<ProjectDto[]>("api/projects");

        if (projects != null)
        {
            _projects.AddRange(projects);
        }

        _token = Observable
            .Merge(
                Events.OfType<ProjectCreatedEvent>().SelectMany(ProjectCreated),
                Events.OfType<ProjectUpdatedEvent>().SelectMany(ProjectUpdated),
                Events.OfType<ProjectDeletedEvent>().SelectMany(ProjectDeleted)
            )
            .Subscribe();
    }

    IObservable<Unit> ProjectCreated(ProjectCreatedEvent e)
    {
        return Observable.FromAsync(async () =>
        {
            _projects.Add(e.Project);

            await InvokeAsync(StateHasChanged);
        });
    }

    IObservable<Unit> ProjectUpdated(ProjectUpdatedEvent e)
    {
        return Observable.FromAsync(async () =>
        {
            var project = _projects.FirstOrDefault(x => x.Id == e.Project.Id);

            if (project != null)
            {
                project.Name = e.Project.Name;
                project.Description = e.Project.Description;
                project.Link = e.Project.Link;
                project.Watchers = e.Project.Watchers;
                project.Forks = e.Project.Forks;
                project.Stars = e.Project.Stars;
            }

            await InvokeAsync(StateHasChanged);
        });
    }

    IObservable<Unit> ProjectDeleted(ProjectDeletedEvent e)
    {
        return Observable.FromAsync(async () =>
        {
            var project = _projects.FirstOrDefault(x => x.Id == e.Id);

            if (project != null)
            {
                _projects.Remove(project);
            }

            await InvokeAsync(StateHasChanged);
        });
    }

    int GetColumnCount(int n)
    {
        return Math.Min(Math.Max(_projects?.Count ?? 0, 1), n);
    }

    string ColumnsClass => $"columns-{GetColumnCount(1)} md:columns-{GetColumnCount(2)} xl:columns-{GetColumnCount(3)}";

    /// <inheritdoc />
    public void Dispose()
    {
        _token?.Dispose();
    }

}